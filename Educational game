#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>
#include <cstring>
#include <cstdlib>
#include <ctime>
using namespace std;

//This is to declare appropriate functions while some are returning value.

void credits(string &);
void menu(string, int &, int &, double &);
void getStats(ofstream &, ifstream &, string &, int &, int &, double &);
void getUserName(string &);
void validateResponse(string &);
int validateAnswer(string);
int checkAnswer(int, int);
void updateStats(int, int &, int &, double&);
void displayStats(string, int, int, double);
void saveStats(ofstream &, string, int, int, double);
int genAdd();
int genSub();
int genMulti();
int genDiv();

int main(){
    
    ofstream outputFile;
    ifstream inputFile;
    int right = 0, wrong = 0;
    double* wins = 0;
    string name, play = "y";

    //srand() is used to create random number every moment.
    unsigned seed = time(0);
    srand(seed);

    wins = new double;
    *wins = 0.00;

    delete wins;

  /*The do will execute the the body even if the condition is false*/
do
{
    credits(play);
if (play == "y" || play == "Y")
{
    getStats(outputFile, inputFile, name, right, wrong, *wins);

    menu(name, right, wrong, *wins);

    saveStats(outputFile, name, right, wrong, *wins);

    /*Here you can reset the stats for the next player*/
   
    right = 0;
    wrong = 0;
    *wins = 0.00;

        }
    } while (play == "y" || play == "Y");
    return 0;
}

void credits(string &play)
{
    cout << "\n**************************************" << endl;
    cout << "         Press y or Y to play.        " << endl;
    cout << "         Press any key to exit.       " << endl;
    cout << "\n**************************************" << endl;
    
    getline(cin, play);
}

//Retrieve user data function.
void getStats(ofstream &outputFile, ifstream &inputFile, string &name, int &correct, int &wrong, double & wins)
{
    string userName;
    getUserName(userName);
    name = userName;
    userName += ".txt";
    
    inputFile.open(userName.c_str());
    //If the inputfile with the user name does not exist, the program will proceed to the game WITHOUT retrieving the user data file.
    if (inputFile.is_open())
    {
        inputFile >> name;
        inputFile >> correct;
        inputFile >> wrong;
        inputFile >> wins;
        inputFile.close();
       
        system("cls");
        
        cout <<"************* Welcome back, " << left << setw(10) << name <<"!************" <<endl;
      
        }else{

            system("cls");
            
        cout <<"************Hello, "<< name << "! Let's play!**********\n" << endl;
    
            }
        }

        //menu function.
        void menu(string name, int &correct, int &wrong, double &wins)
        {
            
            string makeChoice, answer;
            int correctAnswer, answerNumber, rightOrWrong = 0;
            
            do{
                cout << "*****************Game Menu********************\n" << endl;
                cout << "     [1] Addition                      " << endl;      
                cout << "     [2] Subtraction                   " << endl;
                cout << "     [3] Multiplication                " << endl;
                cout << "     [4] Division                      " << endl;
                cout << "     [5] Current statistic             " << endl;
                cout << "     [X] Save and return to home\n     " << endl;
                cout << "***************************************" << endl;

                getline(cin, makeChoice);
                
                validateResponse(makeChoice);
                //After validating, depending on the selection, the program will run the selected option.
                // choice 1 is Addition.
                if (makeChoice == "1"){
                    for (int i = 0; i < 3; i++)
                    {
                    //Set the correct answer to the returned value from the gen Addition function. 
                    correctAnswer = genAdd();
                    //Asks the user to type in the user's answer.
                    getline(cin, answer);
                    //Validate the user's answer
                    answerNumber = validateAnswer(answer);
                    //rightOrWrong variable will determine whether the user's answer is correct or incorrect.
                    rightOrWrong = checkAnswer(correctAnswer, answerNumber);
                    //Calling updateStats function.
                    updateStats(rightOrWrong, correct, wrong, wins);
                    }
                    

                    }
                    //Subtraction.
                    else if (makeChoice == "2"){
                        for (size_t i = 0; i < 3; i++)
                        {
                        correctAnswer = genSub();
                        getline(cin, answer);
                        answerNumber = validateAnswer(answer);
                        rightOrWrong = checkAnswer(correctAnswer, answerNumber);
                        updateStats(rightOrWrong, correct, wrong, wins);
                        
                        }
                        
                        
                        }//Multiplication.
                        else if (makeChoice == "3"){
                      for (size_t i = 0; i < 3; i++)
                      {
                        correctAnswer = genMulti();
                        getline(cin, answer);
                        answerNumber = validateAnswer(answer);
                        rightOrWrong = checkAnswer(correctAnswer, answerNumber);
                        updateStats(rightOrWrong, correct, wrong, wins);
                        
                      }
                      
                        }//Division.
                        else if (makeChoice == "4"){
                          for (size_t i = 0; i < 3; i++)
                          {
                            correctAnswer = genDiv();
                            getline(cin, answer);
                            answerNumber = validateAnswer(answer);
                            rightOrWrong = checkAnswer(correctAnswer, answerNumber);
                            updateStats(rightOrWrong, correct, wrong, wins);
                          }
                          
                            
                            }
                            //Displaying the statistic of user's current progress.
                            else if (makeChoice == "5"){
                                //clears the screen, and call the displayStats function.
                                system("cls");
                                displayStats(name, correct, wrong, wins);

                                system("cls");
                                cout << "***************************************" << endl;
                               
                                }//Returning to the home screen.
                                else{
                                    system("cls");
                                }
                                } while (!(makeChoice == "x" || makeChoice == "X")); 
                            }
